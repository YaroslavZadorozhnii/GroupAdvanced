package com.gmail.docfordja;

import java.util.Arrays;

import com.gmail.docfordja.exception.MyException;

public class Main {

	public static void main(String[] args) {
		Student a = new Student("Atrov", "Vas'ka", 21, true, 110, 1111, 99);
		Student b = new Student("Betrov", "Vas'ka", 22, true, 111, 1112, 98);
		Student c = new Student("Cetrov", "Vas'ka", 23, false, 112, 1113, 97);
		Student d = new Student("Detrov", "Vas'ka", 24, true, 113, 1114, 96);
		Student e = new Student("Etrov", "Vas'ka", 25, false, 114, 1115, 95);
		Student h = new Student("Hetrov", "Vas'ka", 26, true, 115, 1116, 94);
		Student z = new Student("Zetrov", "Vas'ka", 27, true, 116, 1117, 93);
		Student j = new Student("Jetrov", "Vas'ka", 28, false, 117, 1118, 92);
		Student k = new Student("Ketrov", "Vas'ka", 29, true, 118, 1119, 91);
		Student s = new Student("Setrov", "Vas'ka", 20, true, 119, 1110, 90);
		Student x = new Student("Xetrov", "Vas'ka", 21, true, 101, 1101, 89);
		Group studentGroup = new Group();
		
        // Реализация интерактивного зачисления студента в группу.
		studentGroup.interAdd(studentGroup);
        // Наполнение группы студентами
		try {
			// studentGroup.addStudent(x);
			//studentGroup.addStudent(s);
			studentGroup.addStudent(j);
			studentGroup.addStudent(z);
			studentGroup.addStudent(h);
			studentGroup.addStudent(e);
			studentGroup.addStudent(d);
			studentGroup.addStudent(c);
			studentGroup.addStudent(k);
			studentGroup.addStudent(b);
			studentGroup.addStudent(a);
		} catch (MyException e1) {
			e1.printStackTrace();
		}
        // Реализация переопределения toString для класса Group
		System.out.println(studentGroup.toString());
		// Удаление студента с группы
		studentGroup.deleteStudent(a);
        // Реализация поиска студента по фамилии
		System.out.println("Реализация поиска студента по фамилии:");
		System.out.println(studentGroup.someStudent("Jetrov").getLastName() + " " + studentGroup.someStudent("Jetrov").getName());
		// System.out.println(studentGroup.someStudent("Jettrov").getLastName() + " " +
		// studentGroup.someStudent("Jettrov").getName());

		// Вывожу несортированный список
		System.out.println("Вывожу несортированный список:");
		Student[] studentq = studentGroup.getGroup();
		for (int i = 0; i < studentq.length; i++) {
			if (studentq[i] != null)
				System.out.print(studentq[i].getLastName() + " " +studentq[i].getName()+ "; ");
		}

		System.out.println();
		// Сортирую по фамилии и вывожу
		System.out.println("Сортирую по фамилии и вывожу:");
		Student[] students = studentGroup.getGroup();
		Arrays.sort(students, new NameComparator());
		for (int i = 0; i < students.length; i++) {
			if (students[i] != null)
				System.out.print(students[i].getLastName() + " " + students[i].getName() + "; ");
		}
		System.out.println();
		// Сортирую по успеваемости и вывожу
		System.out.println("Сортирую по успеваемости и вывожу:");
		Student[] stud = studentGroup.getGroup();
		Arrays.sort(stud, new LevelComparator());
		for (int i = 0; i < students.length; i++) {
			if (students[i] != null)
				System.out.print(students[i].getLevel() + " " + students[i].getLastName() + "; ");
		}
		System.out.println();
		// Сортирую по возтасту и вывожу
		System.out.println("Сортирую по возтасту и вывожу:");
		Student[] std = studentGroup.getGroup();
		Arrays.sort(std, new AgeComparator());
		for (int i = 0; i < students.length; i++) {
			if (students[i] != null)
				System.out.print(students[i].getAge() + " " + students[i].getLastName() + "; ");
		}
		System.out.println();
		// Формирую список призывников и вывожу его
		System.out.println("Формирую список призывников и вывожу его:");
		Comissariat comissariat = new Comissariat();
		Student[] studentx = comissariat.comone(studentGroup);
		for (int i = 0; i < studentx.length; i++) {
			try {
				if (studentq[i] != null) {
					System.out.print(studentx[i].getLastName() + " " + studentx[i].getName() + "; ");
				}
			} catch (Exception e2) {

			}
		}

	}

}
